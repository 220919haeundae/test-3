package com.kh.ch13_generics;

public class GenericRun {
	/*
	 *  제네릭 : 클래스 또는 메소드에서 사용되는 다양한 데이터 타입을 일반화하여 정의하는 것
	 *  
	 *  
	 *  - 특징
	 *  	* 코드 재사용성 증가
	 *  	* 타입 안정성 제공
	 *  	* 불필요한 형변환 감소
	 *  
	 *  - 제네릭 메소드
	 *  
	 *  	[접근제한자] [예약어] <T> T 메소드명([T 매개변수]) {}
	 *  	// 타입 매개변수 적용 범위 : 매개변수 타입 / 반환타입 / 메소드 내 지역변수
	 *  
	 *  
	 *   - 제네릭 타입 제한
	 *   	* <T> : 제한없이 어떤 타입이든 허용
	 *   	* <T extends 클래스A> : 클래스A 또는 클래스 A를 상속받는 클래스만 허용
	 *   	* <T extends 인터페이스A> : 인터페이스 A를 구현한 클래스만 허용
	 *   	* <T extends 클래스A & 인터페이스A> : 클래스 A를 상속받고, 인터페이스 A를 구현한 클래스만 허용
	 *  
	 */

	public static void main(String[] args) {
		Box<Integer> iBox = new Box<>();
		
		Integer[] iArr = new Integer[10];
		iBox.setList(iArr);
		iBox.setSize(iArr.length);
		
		// [0, 0, 0, ..., 0] --> [603, 0, 0, ..., 0]
		iBox.getList()[0] = 603;
		System.out.println(iBox.getList()[0]);
		
		Box<String> sBox = new Box<>();
		sBox.setList(new String[3]);
		sBox.setSize(sBox.length);
	}

}
