package com.kh.practice.map;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public class MapPractice {
	/*
	 * * Map<K, V> 특징
	 *   : key - value 형식으로 데이터를 저장(관리)
	 *   	+ key에 해당하는 데이터 : 중복 허용하지 않음 (Set 방식)
	 *   	+ value에 해당하는 데이터 : key값이 중복되지 않은 경우 중복 허용 (List방식)
	 *   
	 * * Map의 메소드
	 *   [1] 데이터 추가 : put(키에 해당하는 값, 밸류에 해당하는 값) 	// C
	 *   [2] 데이터 삭제 : remove(키에 해당하는 값)				// D
	 *   [3] 데이터 조회 : get(키에 해당하는 값)					// R
	 *   [4] 키 목록 조회 : KeySet()							// R
	 *   [5] 데이터 길이 조회 : size()							// R
	 */
	public static void main(String[] args) {
		hashMapTest();
		
	}
	
	public static void hashMapTest() {
		// HashMap 객체 선언 및 생성
		// key - 정수형 데이터, Value - 문자열 데이터
		Map<Integer, String> hashMap = new HashMap<>();
		
		// Map 구조에 데이터를 저장(추가) : put(key, value);
		hashMap.put(1000, "프리티엄..");
		hashMap.put(1001, "종군당");
		hashMap.put(1002, "ㄸ피하 기다운 로드");
		
		// 키 목록 조회 : KeySet()
		Set<Integer> keySet = hashMap.keySet();
		for(Integer key : keySet) {
			System.out.println(key);
		}
		
		for(Integer key : keySet) {
			System.out.println(key + " : " + hashMap.get(key));
		}
		
		// "E피하 기다운 로드" 데이터 제거
		hashMap.remove(1002);
		
		//Iterator 객체를 사용하여 조회
		
		Iterator<Integer> it = keySet.iterator();
		
		while(it.hasNext()) {
			int i = it.next();
			System.out.println(i + hashMap.get(i));
		}
		
		// entrySet() : key + value 세트의 집합
		
		Set<Entry<Integer, String>> entrySet = hashMap.entrySet();
		
		Iterator<Entry<Integer, String>> entryIt = entrySet.iterator();
		while(entryIt.hasNext()) {
			System.out.println(entryIt.next());
		}
		
	}

}
