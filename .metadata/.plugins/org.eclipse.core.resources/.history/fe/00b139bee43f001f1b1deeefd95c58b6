package com.kh.practice.tcp;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class Server {
	private static ServerSocket serverSocket = null;
	private static ExecutorService threadPool = Executors.newFixedThreadPool(10);
	private static Scanner sc = new Scanner(System.in);
	
	public static void main(String[] args) {
		
		startServer();
		
		while(true) {
			String key = sc.nextLine();
			if(key.equals("q")) {
				break;
			}
			
		}
		
		stopServer();
		System.out.println("서버를 종료합니다.");
		
	}
	
	
	public static void startServer() {
		Thread thread = new Thread(() -> {
			try {
				serverSocket = new ServerSocket(50001);
				System.out.println("[서버] 시작");
				Socket socket = serverSocket.accept();
				System.out.println("[서버] 클라이언트의 접속 요청을 수락함");
				
				threadPool.execute(() -> {
					while(true) {
						try(DataInputStream dis = new DataInputStream(socket.getInputStream());
								DataOutputStream dos = new DataOutputStream(socket.getOutputStream());) {
						
							String receiveMessage = dis.readUTF();
							System.out.println("[서버] 받은 메세지" + receiveMessage);
							
							String message = receiveMessage;
							dos.writeUTF(message);
							dos.flush();
							System.out.println("[서버] 받은 메세지 다시 보냄 : " + message);
						}
					}
				});
				
			} catch(IOException e) {}
		});
		thread.start();
	}
		

}
